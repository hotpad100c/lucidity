plugins {
	id 'fabric-loom' version '1.8-SNAPSHOT'
	//id 'com.github.johnrengelman.shadow' version '8.1.1'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

loom {
	accessWidenerPath = file("src/main/resources/lucidity.accesswidener")
}

repositories {
	maven {
		name "xanderRepoReleases"
		url "https://maven.isxander.dev/releases"
	}
	maven {
		name = "Terraformers"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		url "https://maven.parchmentmc.org/"
	}
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
	mavenCentral()
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "dev.isxander:yet-another-config-lib:${project.yacl_version}"
	modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")
	modCompileOnly("maven.modrinth:sodium:mc1.21.1-0.6.5-fabric")
	modCompileOnly "maven.modrinth:iris:${project.iris_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	//implementation 'org.bytedeco:javacv:1.5.7'
	//implementation 'org.bytedeco:ffmpeg-platform:5.0-1.5.7'
}

processResources {
	inputs.property "version", project.version
	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}" }
	}
}

/*shadowJar {
	archiveClassifier.set('shadow')
	relocate 'org.bytedeco', "${project.group}.shaded.org.bytedeco" // 避免类冲突
	zip64 true
}

tasks {
	remapJar {
		dependsOn shadowJar
		inputFile.set(shadowJar.archiveFile) // 使用 Shadow JAR 作为输入
	}
*/
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}
	repositories {

	}
}